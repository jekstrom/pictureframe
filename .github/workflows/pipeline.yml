name: Pipeline
run-name: ${{ github.actor }} deployment ðŸš€
on: [push]

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "ðŸ”Ž The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: Check out repository code
        uses: actions/checkout@v4

      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."

      - run: |
          python -m venv venv
          venv/bin/pip install -r requirements.txt

      - run: venv/bin/black . --check --exclude image_creator.py

      - run: ./install_lambda.sh

      - uses: actions/cache@v4
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: hashicorp/setup-terraform@v3
        with:
            terraform_version: "1.9.7"

      - uses: terraform-linters/setup-tflint@v4
        name: Setup TFLint
        with:
          tflint_version: v0.52.0
  
      - name: Init TFLint
        run: tflint --init
        working-directory: infra
        env:
          GITHUB_TOKEN: ${{ github.token }}
  
      - name: Run TFLint
        run: tflint -f compact
        working-directory: infra

      - run: terraform init
        working-directory: infra
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - id: apply
        run: terraform apply -auto-approve -no-color -var-file="dev.tfvars"
        working-directory: infra
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
